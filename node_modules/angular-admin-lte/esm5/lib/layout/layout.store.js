import { BehaviorSubject } from 'rxjs';
import { distinctUntilChanged, pluck } from 'rxjs/operators';
/*
 *
 */
var LayoutStore = /** @class */ (function () {
    /**
     * @method constructor
     * @param layoutConfig [description]
     */
    function LayoutStore(layoutConfig) {
        this.initialLayoutState = {
            isSidebarLeftCollapsed: false,
            isSidebarLeftExpandOnOver: false,
            isSidebarLeftMouseOver: false,
            isSidebarLeftMini: true,
            sidebarRightSkin: 'dark',
            isSidebarRightCollapsed: true,
            isSidebarRightOverContent: true,
            layout: 'normal',
            sidebarLeftMenu: [],
            sidebarLeftMenuActiveUrl: '',
            skin: 'blue'
        };
        if (layoutConfig) {
            this.initialLayoutState = Object.assign(this.initialLayoutState, layoutConfig);
        }
        this.state = new BehaviorSubject(this.initialLayoutState);
        this.layoutState = this.state.asObservable();
    }
    Object.defineProperty(LayoutStore.prototype, "windowInnerHeight", {
        /**
         * [windowInnerHeight description]
         * @method windowInnerHeight
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('windowInnerHeight'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "windowInnerWidth", {
        /**
         * [windowInnerWidth description]
         * @method windowInnerWidth
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('windowInnerWidth'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "isSidebarLeftCollapsed", {
        /**
         * [isSidebarLeftCollapsed description]
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('isSidebarLeftCollapsed'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "isSidebarLeftExpandOnOver", {
        /**
         * [isSidebarLeftExpandOnOver description]
         * @method isSidebarLeftExpandOnOver
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('isSidebarLeftExpandOnOver'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "isSidebarLeftMouseOver", {
        /**
         * [isSidebarLeftMouseOver description]
         * @method isSidebarLeftMouseOver
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('isSidebarLeftMouseOver'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "isSidebarLeftMini", {
        /**
         * [isSidebarLeftMini description]
         * @method isSidebarLeftMini
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('isSidebarLeftMini'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "sidebarRightSkin", {
        /**
         * [sidebarRightSkin description]
         * @method sidebarRightSkin
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('sidebarRightSkin'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "isSidebarRightCollapsed", {
        /**
         * [isSidebarRightCollapsed description]
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('isSidebarRightCollapsed'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "isSidebarRightOverContent", {
        /**
         * [isSidebarRightOverContent description]
         * @method isSidebarRightOverContent
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('isSidebarRightOverContent'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "sidebarLeftMenu", {
        /**
         * [sidebarLeftMenu description]
         * @method sidebarLeftMenu
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('sidebarLeftMenu'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "sidebarLeftMenuActiveUrl", {
        /**
         * [sidebarLeftMenuActiveUrl description]
         * @method sidebarLeftMenuActiveUrl
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('sidebarLeftMenuActiveUrl'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "sidebarLeftElementHeight", {
        /**
         * [sidebarLeftElementHeight description]
         * @method sidebarLeftElementHeight
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('sidebarLeftElementHeight'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "layout", {
        /**
         * [layoutType description]
         * @method layoutType
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('layout'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "skin", {
        /**
         * [skin description]
         * @method skin
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('skin'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LayoutStore.prototype, "wrapperClasses", {
        /**
         * [wrapperClasses description]
         * @method wrapperClasses
         * @return [description]
         */
        get: function () {
            return this.layoutState.pipe(pluck('wrapperClasses'), distinctUntilChanged());
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [sidebarLeftCollapsed description]
     * @method sidebarLeftCollapsed
     * @param value [description]
     */
    LayoutStore.prototype.sidebarLeftCollapsed = function (value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftCollapsed: value }));
    };
    /**
     * [sidebarLeftExpandOnOver description]
     * @method sidebarLeftExpandOnOver
     * @param value [description]
     */
    LayoutStore.prototype.sidebarLeftExpandOnOver = function (value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftExpandOnOver: value }));
    };
    /**
     * [setSidebarLeftElementHeight description]
     * @method setSidebarLeftElementHeight
     * @param value [description]
     */
    LayoutStore.prototype.setSidebarLeftElementHeight = function (value) {
        this.state.next(Object.assign(this.state.value, { sidebarLeftElementHeight: value }));
    };
    /**
     * [setSidebarRightSkin description]
     * @method setSidebarRightSkin
     * @param value [description]
     */
    LayoutStore.prototype.setSidebarRightSkin = function (value) {
        this.state.next(Object.assign(this.state.value, { sidebarRightSkin: value }));
    };
    /**
     * [sidebarLeftMouseOver description]
     * @method sidebarLeftMouseOver
     * @param value [description]
     */
    LayoutStore.prototype.sidebarLeftMouseOver = function (value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftMouseOver: value }));
    };
    /**
     * [sidebarLeftMini description]
     * @method sidebarLeftMini
     * @param value [description]
     */
    LayoutStore.prototype.sidebarLeftMini = function (value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftMini: value }));
    };
    /**
     * [sidebarRightCollapsed description]
     * @method sidebarRightCollapsed
     * @param value [description]
     */
    LayoutStore.prototype.sidebarRightCollapsed = function (value) {
        this.state.next(Object.assign(this.state.value, { isSidebarRightCollapsed: value }));
    };
    /**
     * [sidebarRightOverContent description]
     * @method sidebarRightOverContent
     * @param value [description]
     */
    LayoutStore.prototype.sidebarRightOverContent = function (value) {
        this.state.next(Object.assign(this.state.value, { isSidebarRightOverContent: value }));
    };
    /**
     * [setSidebarLeftMenu description]
     * @method setSidebarLeftMenu
     * @param value [description]
     */
    LayoutStore.prototype.setSidebarLeftMenu = function (value) {
        this.state.next(Object.assign(this.state.value, { sidebarLeftMenu: value }));
    };
    /**
     * [setSidebarLeftMenuActiveUrl description]
     * @method setSidebarLeftMenuActiveUrl
     * @param value [description]
     */
    LayoutStore.prototype.setSidebarLeftMenuActiveUrl = function (value) {
        this.state.next(Object.assign(this.state.value, { sidebarLeftMenuActiveUrl: value }));
    };
    /**
     * [setLayout description]
     * @method setLayout
     * @param value [description]
     */
    LayoutStore.prototype.setLayout = function (value) {
        this.state.next(Object.assign(this.state.value, { layout: value }));
    };
    /**
     * [setSkin description]
     * @method setSkin
     * @param value [description]
     */
    LayoutStore.prototype.setSkin = function (value) {
        this.state.next(Object.assign(this.state.value, { skin: value }));
    };
    /**
     * [setWrapperClasses description]
     * @method setWrapperClasses
     * @param value [description]
     */
    LayoutStore.prototype.setWrapperClasses = function (value) {
        this.state.next(Object.assign(this.state.value, { wrapperClasses: value }));
    };
    /**
     * [setWindowInnerHeight description]
     * @method setWindowInnerHeight
     * @param value [description]
     */
    LayoutStore.prototype.setWindowInnerHeight = function (value) {
        this.state.next(Object.assign(this.state.value, { windowInnerHeight: value }));
    };
    /**
     * [setWindowInnerWidth description]
     * @method setWindowInnerWidth
     * @param value [description]
     */
    LayoutStore.prototype.setWindowInnerWidth = function (value) {
        this.state.next(Object.assign(this.state.value, { windowInnerWidth: value }));
    };
    return LayoutStore;
}());
export { LayoutStore };
//# sourceMappingURL=data:application/json;base64,