import { __decorate, __metadata } from "tslib";
import { Directive, Input, Renderer2, ElementRef } from '@angular/core';
import { ColorService } from './color.service';
var BackgroundColorDirective = /** @class */ (function () {
    /**
     * @method constructor
     * @param elementRef   [description]
     * @param renderer2    [description]
     * @param colorService [description]
     */
    function BackgroundColorDirective(elementRef, renderer2, colorService) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.colorService = colorService;
        this.condition = true;
    }
    Object.defineProperty(BackgroundColorDirective.prototype, "setPrefix", {
        set: function (prefix) {
            this.prefix = prefix;
            this.colorService.setBackgroundColor(this.color, this.condition, this.property, this.prefix);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BackgroundColorDirective.prototype, "setColor", {
        set: function (color) {
            this.color = color;
            this.colorService.setBackgroundColor(this.color, this.condition, this.property, this.prefix);
        },
        enumerable: true,
        configurable: true
    });
    BackgroundColorDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ColorService }
    ]; };
    __decorate([
        Input('mkColorCondition'),
        __metadata("design:type", Object)
    ], BackgroundColorDirective.prototype, "condition", void 0);
    __decorate([
        Input('mkColorPrefix'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], BackgroundColorDirective.prototype, "setPrefix", null);
    __decorate([
        Input('mkColorProperty'),
        __metadata("design:type", String)
    ], BackgroundColorDirective.prototype, "property", void 0);
    __decorate([
        Input('mkColor'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], BackgroundColorDirective.prototype, "setColor", null);
    BackgroundColorDirective = __decorate([
        Directive({
            selector: '[mkColor]',
            providers: [ColorService]
        }),
        __metadata("design:paramtypes", [ElementRef,
            Renderer2,
            ColorService])
    ], BackgroundColorDirective);
    return BackgroundColorDirective;
}());
export { BackgroundColorDirective };
var ColorDirective = /** @class */ (function () {
    /**
     * @method constructor
     * @param elementRef   [description]
     * @param renderer2    [description]
     * @param colorService [description]
     */
    function ColorDirective(elementRef, renderer2, colorService) {
        this.elementRef = elementRef;
        this.renderer2 = renderer2;
        this.colorService = colorService;
    }
    Object.defineProperty(ColorDirective.prototype, "color", {
        set: function (color) {
            this.colorService.setFontColor(color);
        },
        enumerable: true,
        configurable: true
    });
    ColorDirective.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ColorService }
    ]; };
    __decorate([
        Input('mkFontColor'),
        __metadata("design:type", String),
        __metadata("design:paramtypes", [String])
    ], ColorDirective.prototype, "color", null);
    ColorDirective = __decorate([
        Directive({
            selector: '[mkFontColor]',
            providers: [ColorService]
        }),
        __metadata("design:paramtypes", [ElementRef,
            Renderer2,
            ColorService])
    ], ColorDirective);
    return ColorDirective;
}());
export { ColorDirective };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29sb3IuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1hZG1pbi1sdGUvIiwic291cmNlcyI6WyJsaWIvY29sb3IvY29sb3IuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRXhFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQU0vQztJQUtFOzs7OztPQUtHO0lBQ0gsa0NBQ1UsVUFBc0IsRUFDdEIsU0FBb0IsRUFDcEIsWUFBMEI7UUFGMUIsZUFBVSxHQUFWLFVBQVUsQ0FBWTtRQUN0QixjQUFTLEdBQVQsU0FBUyxDQUFXO1FBQ3BCLGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBR1QsY0FBUyxHQUFHLElBQUksQ0FBQztJQUZ6QyxDQUFDO0lBR29CLHNCQUFJLCtDQUFTO2FBQWIsVUFBYyxNQUFjO1lBQ2xELElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO1lBQ3JCLElBQUksQ0FBQyxZQUFZLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9GLENBQUM7OztPQUFBO0lBRWlCLHNCQUFJLDhDQUFRO2FBQVosVUFBYSxLQUFhO1lBQzFDLElBQUksQ0FBQyxLQUFLLEdBQUcsS0FBSyxDQUFDO1lBQ25CLElBQUksQ0FBQyxZQUFZLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLElBQUksQ0FBQyxRQUFRLEVBQUUsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQy9GLENBQUM7OztPQUFBOztnQkFkcUIsVUFBVTtnQkFDWCxTQUFTO2dCQUNOLFlBQVk7O0lBR1Q7UUFBMUIsS0FBSyxDQUFDLGtCQUFrQixDQUFDOzsrREFBa0I7SUFDcEI7UUFBdkIsS0FBSyxDQUFDLGVBQWUsQ0FBQzs7OzZEQUd0QjtJQUN5QjtRQUF6QixLQUFLLENBQUMsaUJBQWlCLENBQUM7OzhEQUFrQjtJQUN6QjtRQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzs7NERBR2hCO0lBMUJVLHdCQUF3QjtRQUpwQyxTQUFTLENBQUM7WUFDVCxRQUFRLEVBQUUsV0FBVztZQUNyQixTQUFTLEVBQUUsQ0FBQyxZQUFZLENBQUM7U0FDMUIsQ0FBQzt5Q0Fhc0IsVUFBVTtZQUNYLFNBQVM7WUFDTixZQUFZO09BZHpCLHdCQUF3QixDQTJCcEM7SUFBRCwrQkFBQztDQUFBLEFBM0JELElBMkJDO1NBM0JZLHdCQUF3QjtBQWlDckM7SUFDRTs7Ozs7T0FLRztJQUNILHdCQUNVLFVBQXNCLEVBQ3RCLFNBQW9CLEVBQ3BCLFlBQTBCO1FBRjFCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsY0FBUyxHQUFULFNBQVMsQ0FBVztRQUNwQixpQkFBWSxHQUFaLFlBQVksQ0FBYztJQUNqQyxDQUFDO0lBRWtCLHNCQUFJLGlDQUFLO2FBQVQsVUFBVSxLQUFhO1lBQzNDLElBQUksQ0FBQyxZQUFZLENBQUMsWUFBWSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQ3hDLENBQUM7OztPQUFBOztnQkFQcUIsVUFBVTtnQkFDWCxTQUFTO2dCQUNOLFlBQVk7O0lBR2Q7UUFBckIsS0FBSyxDQUFDLGFBQWEsQ0FBQzs7OytDQUVwQjtJQWZVLGNBQWM7UUFKMUIsU0FBUyxDQUFDO1lBQ1QsUUFBUSxFQUFFLGVBQWU7WUFDekIsU0FBUyxFQUFFLENBQUMsWUFBWSxDQUFDO1NBQzFCLENBQUM7eUNBU3NCLFVBQVU7WUFDWCxTQUFTO1lBQ04sWUFBWTtPQVZ6QixjQUFjLENBZ0IxQjtJQUFELHFCQUFDO0NBQUEsQUFoQkQsSUFnQkM7U0FoQlksY0FBYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIFJlbmRlcmVyMiwgRWxlbWVudFJlZiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBDb2xvclNlcnZpY2UgfSBmcm9tICcuL2NvbG9yLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbWtDb2xvcl0nLFxuICBwcm92aWRlcnM6IFtDb2xvclNlcnZpY2VdXG59KVxuZXhwb3J0IGNsYXNzIEJhY2tncm91bmRDb2xvckRpcmVjdGl2ZSB7XG5cbiAgcHJpdmF0ZSBwcmVmaXg6IHN0cmluZztcbiAgcHJpdmF0ZSBjb2xvcjogc3RyaW5nO1xuXG4gIC8qKlxuICAgKiBAbWV0aG9kIGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSBlbGVtZW50UmVmICAgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcGFyYW0gcmVuZGVyZXIyICAgIFtkZXNjcmlwdGlvbl1cbiAgICogQHBhcmFtIGNvbG9yU2VydmljZSBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgcHJpdmF0ZSByZW5kZXJlcjI6IFJlbmRlcmVyMixcbiAgICBwcml2YXRlIGNvbG9yU2VydmljZTogQ29sb3JTZXJ2aWNlXG4gICkge31cblxuICBASW5wdXQoJ21rQ29sb3JDb25kaXRpb24nKSBjb25kaXRpb24gPSB0cnVlO1xuICBASW5wdXQoJ21rQ29sb3JQcmVmaXgnKSBzZXQgc2V0UHJlZml4KHByZWZpeDogc3RyaW5nKSB7XG4gICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XG4gICAgdGhpcy5jb2xvclNlcnZpY2Uuc2V0QmFja2dyb3VuZENvbG9yKHRoaXMuY29sb3IsIHRoaXMuY29uZGl0aW9uLCB0aGlzLnByb3BlcnR5LCB0aGlzLnByZWZpeCk7XG4gIH1cbiAgQElucHV0KCdta0NvbG9yUHJvcGVydHknKSBwcm9wZXJ0eTogc3RyaW5nO1xuICBASW5wdXQoJ21rQ29sb3InKSBzZXQgc2V0Q29sb3IoY29sb3I6IHN0cmluZykge1xuICAgIHRoaXMuY29sb3IgPSBjb2xvcjtcbiAgICB0aGlzLmNvbG9yU2VydmljZS5zZXRCYWNrZ3JvdW5kQ29sb3IodGhpcy5jb2xvciwgdGhpcy5jb25kaXRpb24sIHRoaXMucHJvcGVydHksIHRoaXMucHJlZml4KTtcbiAgfVxufVxuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbbWtGb250Q29sb3JdJyxcbiAgcHJvdmlkZXJzOiBbQ29sb3JTZXJ2aWNlXVxufSlcbmV4cG9ydCBjbGFzcyBDb2xvckRpcmVjdGl2ZSB7XG4gIC8qKlxuICAgKiBAbWV0aG9kIGNvbnN0cnVjdG9yXG4gICAqIEBwYXJhbSBlbGVtZW50UmVmICAgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcGFyYW0gcmVuZGVyZXIyICAgIFtkZXNjcmlwdGlvbl1cbiAgICogQHBhcmFtIGNvbG9yU2VydmljZSBbZGVzY3JpcHRpb25dXG4gICAqL1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGVsZW1lbnRSZWY6IEVsZW1lbnRSZWYsXG4gICAgcHJpdmF0ZSByZW5kZXJlcjI6IFJlbmRlcmVyMixcbiAgICBwcml2YXRlIGNvbG9yU2VydmljZTogQ29sb3JTZXJ2aWNlXG4gICkge31cblxuICBASW5wdXQoJ21rRm9udENvbG9yJykgc2V0IGNvbG9yKGNvbG9yOiBzdHJpbmcpIHtcbiAgICB0aGlzLmNvbG9yU2VydmljZS5zZXRGb250Q29sb3IoY29sb3IpO1xuICB9XG59XG4iXX0=