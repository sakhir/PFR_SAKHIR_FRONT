import { __read, __spread } from "tslib";
/**
 * [throttle description]
 * @method throttle
 * @param callback [description]
 * @param delay    [description]
 * @return [description]
 */
export function throttle(callback, delay) {
    var _this = this;
    var timeout = null;
    return function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (!timeout) {
            timeout = setTimeout(function () {
                callback.call.apply(callback, __spread([_this], args));
                timeout = null;
            }, delay);
        }
    };
}
/**
 * [removeSubscriptions description]
 * @method removeSubscriptions
 */
export function removeSubscriptions(subscriptions) {
    if (subscriptions) {
        subscriptions.forEach(function (subscription) {
            subscription.unsubscribe();
        });
    }
    return [];
}
/**
 * [removeListeners description]
 * @method removeListeners
 */
export function removeListeners(listeners) {
    if (listeners) {
        listeners.forEach(function (listener) {
            listener();
        });
    }
    return [];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItYWRtaW4tbHRlLyIsInNvdXJjZXMiOlsibGliL2hlbHBlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUdBOzs7Ozs7R0FNRztBQUNILE1BQU0sVUFBVSxRQUFRLENBQUMsUUFBb0IsRUFBRSxLQUFhO0lBQTVELGlCQVVDO0lBVEMsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ25CLE9BQU87UUFBQyxjQUFPO2FBQVAsVUFBTyxFQUFQLHFCQUFPLEVBQVAsSUFBTztZQUFQLHlCQUFPOztRQUNiLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixPQUFPLEdBQUcsVUFBVSxDQUFDO2dCQUNuQixRQUFRLENBQUMsSUFBSSxPQUFiLFFBQVEsWUFBTSxLQUFJLEdBQUssSUFBSSxHQUFFO2dCQUM3QixPQUFPLEdBQUcsSUFBSSxDQUFDO1lBQ2pCLENBQUMsRUFBRSxLQUFLLENBQUMsQ0FBQztTQUNYO0lBQ0gsQ0FBQyxDQUFDO0FBQ0osQ0FBQztBQUdEOzs7R0FHRztBQUNILE1BQU0sVUFBVSxtQkFBbUIsQ0FBQyxhQUFhO0lBQy9DLElBQUksYUFBYSxFQUFFO1FBQ2pCLGFBQWEsQ0FBQyxPQUFPLENBQUMsVUFBQyxZQUEwQjtZQUMvQyxZQUFZLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDN0IsQ0FBQyxDQUFDLENBQUM7S0FDSjtJQUNELE9BQU8sRUFBRSxDQUFDO0FBQ1osQ0FBQztBQUVEOzs7R0FHRztBQUNILE1BQU0sVUFBVSxlQUFlLENBQUMsU0FBUztJQUN2QyxJQUFJLFNBQVMsRUFBRTtRQUNiLFNBQVMsQ0FBQyxPQUFPLENBQUMsVUFBQyxRQUFvQjtZQUNyQyxRQUFRLEVBQUUsQ0FBQztRQUNiLENBQUMsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxPQUFPLEVBQUUsQ0FBQztBQUNaLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuXG4vKipcbiAqIFt0aHJvdHRsZSBkZXNjcmlwdGlvbl1cbiAqIEBtZXRob2QgdGhyb3R0bGVcbiAqIEBwYXJhbSBjYWxsYmFjayBbZGVzY3JpcHRpb25dXG4gKiBAcGFyYW0gZGVsYXkgICAgW2Rlc2NyaXB0aW9uXVxuICogQHJldHVybiBbZGVzY3JpcHRpb25dXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvdHRsZShjYWxsYmFjazogKCkgPT4gdm9pZCwgZGVsYXk6IG51bWJlcik6IChhcmdzOiBBcnJheTxhbnk+KSA9PiB2b2lkIHtcbiAgbGV0IHRpbWVvdXQgPSBudWxsO1xuICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICBpZiAoIXRpbWVvdXQpIHtcbiAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2suY2FsbCh0aGlzLCAuLi5hcmdzKTtcbiAgICAgICAgdGltZW91dCA9IG51bGw7XG4gICAgICB9LCBkZWxheSk7XG4gICAgfVxuICB9O1xufVxuXG5cbi8qKlxuICogW3JlbW92ZVN1YnNjcmlwdGlvbnMgZGVzY3JpcHRpb25dXG4gKiBAbWV0aG9kIHJlbW92ZVN1YnNjcmlwdGlvbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVN1YnNjcmlwdGlvbnMoc3Vic2NyaXB0aW9ucyk6IEFycmF5PFN1YnNjcmlwdGlvbj4ge1xuICBpZiAoc3Vic2NyaXB0aW9ucykge1xuICAgIHN1YnNjcmlwdGlvbnMuZm9yRWFjaCgoc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb24pID0+IHtcbiAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiBbXTtcbn1cblxuLyoqXG4gKiBbcmVtb3ZlTGlzdGVuZXJzIGRlc2NyaXB0aW9uXVxuICogQG1ldGhvZCByZW1vdmVMaXN0ZW5lcnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVycyhsaXN0ZW5lcnMpOiBBcnJheTwoKSA9PiB2b2lkPiB7XG4gIGlmIChsaXN0ZW5lcnMpIHtcbiAgICBsaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXI6ICgpID0+IHZvaWQpID0+IHtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIFtdO1xufVxuIl19