import { __decorate, __metadata } from "tslib";
import { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, ContentChild, EventEmitter, Input, NgZone, OnDestroy, Output, Renderer2, ViewChild } from '@angular/core';
import { BoxContentDirective, BoxFooterDirective, BoxHeaderDirective, BoxToolsDirective } from './box.directive';
import { removeListeners } from '../helpers';
/*
 *
 */
var BoxComponent = /** @class */ (function () {
    /**
     * @method constructor
     * @param changeDetectorRef [description]
     * @param ngZone            [description]
     * @param renderer2         [description]
     */
    function BoxComponent(changeDetectorRef, ngZone, renderer2) {
        this.changeDetectorRef = changeDetectorRef;
        this.ngZone = ngZone;
        this.renderer2 = renderer2;
        this.remove = false;
        this.listeners = [];
        this.boxColor = 'default';
        this.buttonsStyleClass = 'btn btn-box-tool';
        this.contentStyleClass = 'box-content-wrapper';
        this.footerStyleClass = 'box-footer';
        this.headerBorder = true;
        this.headerStyleClass = 'box-header';
        this.isCollapsable = true;
        this.isCollapsed = false;
        this.isRemovable = true;
        this.isSolid = false;
        this.loadingStyleClass = 'fa fa-refresh fa-spin';
        this.styleClass = 'box';
        this.collapseDone = new EventEmitter();
        this.collapseStart = new EventEmitter();
    }
    /**
     * @method ngAfterViewInit
     */
    BoxComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.ngZone.runOutsideAngular(function () {
            if (_this.toggleButtonElement) {
                _this.listeners.push(_this.renderer2.listen(_this.toggleButtonElement.nativeElement, 'click', function () {
                    _this.isCollapsed = !_this.isCollapsed;
                    _this.changeDetectorRef.detectChanges();
                }));
            }
            if (_this.removeButtonElement) {
                _this.listeners.push(_this.renderer2.listen(_this.removeButtonElement.nativeElement, 'click', function () {
                    _this.remove = true;
                    _this.changeDetectorRef.detectChanges();
                }));
            }
        });
    };
    /**
     * @method ngOnDestroy
     */
    BoxComponent.prototype.ngOnDestroy = function () {
        removeListeners(this.listeners);
    };
    /**
     * [removedDone description]
     * @method removedDone
     * @param event [description]
     */
    BoxComponent.prototype.removedDone = function (event) {
        if (event.toState === '1') {
            this.removed = true;
        }
    };
    /**
     * [collapseStart description]
     * @method collapseStart
     * @param event [description]
     */
    BoxComponent.prototype.onCollapseStart = function (event) {
        if (event.fromState !== 'void') {
            this.isCollaping = true;
            this.collapseStart.emit(event);
        }
    };
    /**
     * [collapseDone description]
     * @method collapseDone
     * @param event [description]
     */
    BoxComponent.prototype.onCollapseDone = function (event) {
        if (event.fromState !== 'void') {
            this.isCollaping = false;
            this.collapseDone.emit(event);
        }
    };
    BoxComponent.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: NgZone },
        { type: Renderer2 }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "boxColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "buttonsStyleClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "contentStyleClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], BoxComponent.prototype, "contentColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], BoxComponent.prototype, "footer", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], BoxComponent.prototype, "footerColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "footerStyleClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], BoxComponent.prototype, "header", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "headerBorder", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], BoxComponent.prototype, "headerColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "headerStyleClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "isCollapsable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "isCollapsed", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Boolean)
    ], BoxComponent.prototype, "isLoading", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "isRemovable", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "isSolid", void 0);
    __decorate([
        Input(),
        __metadata("design:type", String)
    ], BoxComponent.prototype, "loadingColor", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "loadingStyleClass", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "styleClass", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "collapseDone", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "collapseStart", void 0);
    __decorate([
        ContentChild(BoxHeaderDirective, /* TODO: add static flag */ {}),
        __metadata("design:type", BoxHeaderDirective)
    ], BoxComponent.prototype, "boxHeaderDirective", void 0);
    __decorate([
        ContentChild(BoxFooterDirective, /* TODO: add static flag */ {}),
        __metadata("design:type", BoxFooterDirective)
    ], BoxComponent.prototype, "boxFooterDirective", void 0);
    __decorate([
        ContentChild(BoxContentDirective, /* TODO: add static flag */ {}),
        __metadata("design:type", BoxContentDirective)
    ], BoxComponent.prototype, "boxContentDirective", void 0);
    __decorate([
        ContentChild(BoxToolsDirective, /* TODO: add static flag */ {}),
        __metadata("design:type", BoxToolsDirective)
    ], BoxComponent.prototype, "boxToolsDirective", void 0);
    __decorate([
        ViewChild('toggleButtonElement'),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "toggleButtonElement", void 0);
    __decorate([
        ViewChild('removeButtonElement'),
        __metadata("design:type", Object)
    ], BoxComponent.prototype, "removeButtonElement", void 0);
    BoxComponent = __decorate([
        Component({
            selector: 'mk-box',
            template: "<div *ngIf=\"!removed\" [mkColor]=\"boxColor\" mkColorProperty=\"border-color\" mkColorPrefix=\"box\" [ngClass]=\"styleClass\" [class.collapsed-box]=\"isCollapsed && !isCollaping\" [class.box-solid]=\"isSolid\" [mkCollapseAnimation]=\"remove\" (mkCollapseAnimation.done)=\"removedDone($event)\">\n  <div *ngIf=\"header || boxHeaderDirective\" [ngClass]=\"headerStyleClass\" [mkColor]=\"boxColor\" [mkColorCondition]=\"isSolid\" mkColorProperty=\"background-color\" [class.with-border]=\"headerBorder\">\n    <h3 class=\"box-title\" [mkFontColor]=\"headerColor\">\n      {{header}}\n      <ng-content select=\"mk-box-header\"></ng-content>\n    </h3>\n    <div class=\"box-tools pull-right\">\n      <ng-content select=\"mk-box-tools\"></ng-content>\n      <button *ngIf=\"isCollapsable\" type=\"button\" [ngClass]=\"buttonsStyleClass\" #toggleButtonElement>\n        <i class=\"fa\" [ngClass]=\"{'fa-plus': isCollapsed, 'fa-minus': !isCollapsed}\"></i>\n      </button>\n      <button *ngIf=\"isRemovable\" type=\"button\" [ngClass]=\"buttonsStyleClass\" #removeButtonElement>\n        <i class=\"fa fa-times\"></i>\n      </button>\n    </div>\n  </div>\n  <div [ngClass]=\"contentStyleClass\" [mkFontColor]=\"contentColor\" [mkCollapseAnimation]=\"isCollapsed\" (mkCollapseAnimation.start)=\"onCollapseStart($event)\" (mkCollapseAnimation.done)=\"onCollapseDone($event)\">\n    <div class=\"box-body\">\n      <ng-container *ngIf=\"boxHeaderDirective || boxContentDirective || boxFooterDirective || boxToolsDirective; else noDirective\">\n        <ng-content select=\"mk-box-content\"></ng-content>\n      </ng-container>\n      <ng-template #noDirective>\n        <ng-content></ng-content>\n      </ng-template>\n    </div>\n    <div *ngIf=\"footer || boxFooterDirective\" [ngClass]=\"footerStyleClass\" [mkFontColor]=\"footerColor\">\n      {{footer}}\n      <ng-content select=\"mk-box-footer\"></ng-content>\n    </div>\n  </div>\n  <div *ngIf=\"isLoading\" class=\"overlay\">\n    <i [ngClass]=\"loadingStyleClass\" [mkFontColor]=\"loadingColor\"></i>\n  </div>\n</div>\n",
            changeDetection: ChangeDetectionStrategy.OnPush,
            styles: [".box.collapsed-box .box-body,.box.collapsed-box .box-footer{display:inherit}.box-solid{border:1px solid}.box-body{background-color:#fff}.box.box-solid.bg-color>.box-header{color:#fff}"]
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef,
            NgZone,
            Renderer2])
    ], BoxComponent);
    return BoxComponent;
}());
export { BoxComponent };
//# sourceMappingURL=data:application/json;base64,