/**
 * [throttle description]
 * @method throttle
 * @param callback [description]
 * @param delay    [description]
 * @return [description]
 */
export function throttle(callback, delay) {
    let timeout = null;
    return (...args) => {
        if (!timeout) {
            timeout = setTimeout(() => {
                callback.call(this, ...args);
                timeout = null;
            }, delay);
        }
    };
}
/**
 * [removeSubscriptions description]
 * @method removeSubscriptions
 */
export function removeSubscriptions(subscriptions) {
    if (subscriptions) {
        subscriptions.forEach((subscription) => {
            subscription.unsubscribe();
        });
    }
    return [];
}
/**
 * [removeListeners description]
 * @method removeListeners
 */
export function removeListeners(listeners) {
    if (listeners) {
        listeners.forEach((listener) => {
            listener();
        });
    }
    return [];
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGVscGVycy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItYWRtaW4tbHRlLyIsInNvdXJjZXMiOlsibGliL2hlbHBlcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBR0E7Ozs7OztHQU1HO0FBQ0gsTUFBTSxVQUFVLFFBQVEsQ0FBQyxRQUFvQixFQUFFLEtBQWE7SUFDMUQsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ25CLE9BQU8sQ0FBQyxHQUFHLElBQUksRUFBRSxFQUFFO1FBQ2pCLElBQUksQ0FBQyxPQUFPLEVBQUU7WUFDWixPQUFPLEdBQUcsVUFBVSxDQUFDLEdBQUcsRUFBRTtnQkFDeEIsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLEVBQUUsR0FBRyxJQUFJLENBQUMsQ0FBQztnQkFDN0IsT0FBTyxHQUFHLElBQUksQ0FBQztZQUNqQixDQUFDLEVBQUUsS0FBSyxDQUFDLENBQUM7U0FDWDtJQUNILENBQUMsQ0FBQztBQUNKLENBQUM7QUFHRDs7O0dBR0c7QUFDSCxNQUFNLFVBQVUsbUJBQW1CLENBQUMsYUFBYTtJQUMvQyxJQUFJLGFBQWEsRUFBRTtRQUNqQixhQUFhLENBQUMsT0FBTyxDQUFDLENBQUMsWUFBMEIsRUFBRSxFQUFFO1lBQ25ELFlBQVksQ0FBQyxXQUFXLEVBQUUsQ0FBQztRQUM3QixDQUFDLENBQUMsQ0FBQztLQUNKO0lBQ0QsT0FBTyxFQUFFLENBQUM7QUFDWixDQUFDO0FBRUQ7OztHQUdHO0FBQ0gsTUFBTSxVQUFVLGVBQWUsQ0FBQyxTQUFTO0lBQ3ZDLElBQUksU0FBUyxFQUFFO1FBQ2IsU0FBUyxDQUFDLE9BQU8sQ0FBQyxDQUFDLFFBQW9CLEVBQUUsRUFBRTtZQUN6QyxRQUFRLEVBQUUsQ0FBQztRQUNiLENBQUMsQ0FBQyxDQUFDO0tBQ0o7SUFDRCxPQUFPLEVBQUUsQ0FBQztBQUNaLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuXG4vKipcbiAqIFt0aHJvdHRsZSBkZXNjcmlwdGlvbl1cbiAqIEBtZXRob2QgdGhyb3R0bGVcbiAqIEBwYXJhbSBjYWxsYmFjayBbZGVzY3JpcHRpb25dXG4gKiBAcGFyYW0gZGVsYXkgICAgW2Rlc2NyaXB0aW9uXVxuICogQHJldHVybiBbZGVzY3JpcHRpb25dXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0aHJvdHRsZShjYWxsYmFjazogKCkgPT4gdm9pZCwgZGVsYXk6IG51bWJlcik6IChhcmdzOiBBcnJheTxhbnk+KSA9PiB2b2lkIHtcbiAgbGV0IHRpbWVvdXQgPSBudWxsO1xuICByZXR1cm4gKC4uLmFyZ3MpID0+IHtcbiAgICBpZiAoIXRpbWVvdXQpIHtcbiAgICAgIHRpbWVvdXQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgY2FsbGJhY2suY2FsbCh0aGlzLCAuLi5hcmdzKTtcbiAgICAgICAgdGltZW91dCA9IG51bGw7XG4gICAgICB9LCBkZWxheSk7XG4gICAgfVxuICB9O1xufVxuXG5cbi8qKlxuICogW3JlbW92ZVN1YnNjcmlwdGlvbnMgZGVzY3JpcHRpb25dXG4gKiBAbWV0aG9kIHJlbW92ZVN1YnNjcmlwdGlvbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZVN1YnNjcmlwdGlvbnMoc3Vic2NyaXB0aW9ucyk6IEFycmF5PFN1YnNjcmlwdGlvbj4ge1xuICBpZiAoc3Vic2NyaXB0aW9ucykge1xuICAgIHN1YnNjcmlwdGlvbnMuZm9yRWFjaCgoc3Vic2NyaXB0aW9uOiBTdWJzY3JpcHRpb24pID0+IHtcbiAgICAgIHN1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xuICAgIH0pO1xuICB9XG4gIHJldHVybiBbXTtcbn1cblxuLyoqXG4gKiBbcmVtb3ZlTGlzdGVuZXJzIGRlc2NyaXB0aW9uXVxuICogQG1ldGhvZCByZW1vdmVMaXN0ZW5lcnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUxpc3RlbmVycyhsaXN0ZW5lcnMpOiBBcnJheTwoKSA9PiB2b2lkPiB7XG4gIGlmIChsaXN0ZW5lcnMpIHtcbiAgICBsaXN0ZW5lcnMuZm9yRWFjaCgobGlzdGVuZXI6ICgpID0+IHZvaWQpID0+IHtcbiAgICAgIGxpc3RlbmVyKCk7XG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIFtdO1xufVxuIl19