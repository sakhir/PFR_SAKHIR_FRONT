var LayoutModule_1;
import { __decorate, __metadata, __param } from "tslib";
import { NgModule, Optional, SkipSelf } from '@angular/core';
import { CommonModule } from '@angular/common';
import { RouterModule } from '@angular/router';
import { ContentModule } from './content/content.module';
import { FooterModule } from './footer/footer.module';
import { HeaderModule } from './header/header.module';
import { SidebarLeftModule } from './sidebar-left/sidebar-left.module';
import { SidebarRightModule } from './sidebar-right/sidebar-right.module';
import { WrapperModule } from './wrapper/wrapper.module';
import { LayoutService } from './layout.service';
import { layoutProvider } from './layout.provider';
import { RoutingService } from '../services/routing.service';
import { WrapperService } from './wrapper/wrapper.service';
import { SidebarRightService } from './sidebar-right/sidebar-right.service';
import { HeaderService } from './header/header.service';
import { FooterService } from './footer/footer.service';
let LayoutModule = LayoutModule_1 = class LayoutModule {
    /**
     * @method constructor
     * @param parentModule [description]
     */
    constructor(parentModule) {
        if (parentModule) {
            throw new Error('LayoutModule is already loaded. Import it in the AppModule only!');
        }
    }
    /**
     * [forRoot description]
     * @method forRoot
     * @param  layoutConfig [description]
     * @return [description]
     */
    static forRoot(layoutConfig) {
        return {
            ngModule: LayoutModule_1,
            providers: [...layoutProvider(layoutConfig), LayoutService]
        };
    }
};
LayoutModule.ctorParameters = () => [
    { type: LayoutModule, decorators: [{ type: Optional }, { type: SkipSelf }] }
];
LayoutModule = LayoutModule_1 = __decorate([
    NgModule({
        imports: [CommonModule, RouterModule],
        exports: [ContentModule, FooterModule, HeaderModule, SidebarLeftModule, SidebarRightModule, WrapperModule],
        providers: [RoutingService, WrapperService, SidebarRightService, HeaderService, FooterService]
    }),
    __param(0, Optional()), __param(0, SkipSelf()),
    __metadata("design:paramtypes", [LayoutModule])
], LayoutModule);
export { LayoutModule };
export * from './layout.service';
export * from './layout.store';
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGF5b3V0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2FuZ3VsYXItYWRtaW4tbHRlLyIsInNvdXJjZXMiOlsibGliL2xheW91dC9sYXlvdXQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsUUFBUSxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNsRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9DLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLG9DQUFvQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHNDQUFzQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUV6RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFakQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUM3RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDM0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDNUUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQU94RCxJQUFhLFlBQVksb0JBQXpCLE1BQWEsWUFBWTtJQUV2Qjs7O09BR0c7SUFDSCxZQUFvQyxZQUEwQjtRQUM1RCxJQUFJLFlBQVksRUFBRTtZQUNoQixNQUFNLElBQUksS0FBSyxDQUFDLGtFQUFrRSxDQUFDLENBQUM7U0FDckY7SUFDSCxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCxNQUFNLENBQUMsT0FBTyxDQUFDLFlBQXlCO1FBQ3RDLE9BQU87WUFDTCxRQUFRLEVBQUUsY0FBWTtZQUN0QixTQUFTLEVBQUUsQ0FBQyxHQUFHLGNBQWMsQ0FBQyxZQUFZLENBQUMsRUFBRSxhQUFhLENBQUM7U0FDNUQsQ0FBQztJQUNKLENBQUM7Q0FDRixDQUFBOztZQWxCbUQsWUFBWSx1QkFBakQsUUFBUSxZQUFJLFFBQVE7O0FBTnRCLFlBQVk7SUFMeEIsUUFBUSxDQUFDO1FBQ1IsT0FBTyxFQUFFLENBQUMsWUFBWSxFQUFFLFlBQVksQ0FBQztRQUNyQyxPQUFPLEVBQUUsQ0FBQyxhQUFhLEVBQUUsWUFBWSxFQUFFLFlBQVksRUFBRSxpQkFBaUIsRUFBRSxrQkFBa0IsRUFBRSxhQUFhLENBQUM7UUFDMUcsU0FBUyxFQUFFLENBQUMsY0FBYyxFQUFFLGNBQWMsRUFBRSxtQkFBbUIsRUFBRSxhQUFhLEVBQUUsYUFBYSxDQUFDO0tBQy9GLENBQUM7SUFPYSxXQUFBLFFBQVEsRUFBRSxDQUFBLEVBQUUsV0FBQSxRQUFRLEVBQUUsQ0FBQTtxQ0FBZSxZQUFZO0dBTm5ELFlBQVksQ0F3QnhCO1NBeEJZLFlBQVk7QUEwQnpCLGNBQWMsa0JBQWtCLENBQUM7QUFDakMsY0FBYyxnQkFBZ0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBPcHRpb25hbCwgU2tpcFNlbGYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuXG5pbXBvcnQgeyBDb250ZW50TW9kdWxlIH0gZnJvbSAnLi9jb250ZW50L2NvbnRlbnQubW9kdWxlJztcbmltcG9ydCB7IEZvb3Rlck1vZHVsZSB9IGZyb20gJy4vZm9vdGVyL2Zvb3Rlci5tb2R1bGUnO1xuaW1wb3J0IHsgSGVhZGVyTW9kdWxlIH0gZnJvbSAnLi9oZWFkZXIvaGVhZGVyLm1vZHVsZSc7XG5pbXBvcnQgeyBTaWRlYmFyTGVmdE1vZHVsZSB9IGZyb20gJy4vc2lkZWJhci1sZWZ0L3NpZGViYXItbGVmdC5tb2R1bGUnO1xuaW1wb3J0IHsgU2lkZWJhclJpZ2h0TW9kdWxlIH0gZnJvbSAnLi9zaWRlYmFyLXJpZ2h0L3NpZGViYXItcmlnaHQubW9kdWxlJztcbmltcG9ydCB7IFdyYXBwZXJNb2R1bGUgfSBmcm9tICcuL3dyYXBwZXIvd3JhcHBlci5tb2R1bGUnO1xuXG5pbXBvcnQgeyBMYXlvdXRTZXJ2aWNlIH0gZnJvbSAnLi9sYXlvdXQuc2VydmljZSc7XG5pbXBvcnQgeyBMYXlvdXRTdGF0ZSB9IGZyb20gJy4vbGF5b3V0LnN0YXRlJztcbmltcG9ydCB7IGxheW91dFByb3ZpZGVyIH0gZnJvbSAnLi9sYXlvdXQucHJvdmlkZXInO1xuXG5pbXBvcnQgeyBSb3V0aW5nU2VydmljZSB9IGZyb20gJy4uL3NlcnZpY2VzL3JvdXRpbmcuc2VydmljZSc7XG5pbXBvcnQgeyBXcmFwcGVyU2VydmljZSB9IGZyb20gJy4vd3JhcHBlci93cmFwcGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgU2lkZWJhclJpZ2h0U2VydmljZSB9IGZyb20gJy4vc2lkZWJhci1yaWdodC9zaWRlYmFyLXJpZ2h0LnNlcnZpY2UnO1xuaW1wb3J0IHsgSGVhZGVyU2VydmljZSB9IGZyb20gJy4vaGVhZGVyL2hlYWRlci5zZXJ2aWNlJztcbmltcG9ydCB7IEZvb3RlclNlcnZpY2UgfSBmcm9tICcuL2Zvb3Rlci9mb290ZXIuc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIFJvdXRlck1vZHVsZV0sXG4gIGV4cG9ydHM6IFtDb250ZW50TW9kdWxlLCBGb290ZXJNb2R1bGUsIEhlYWRlck1vZHVsZSwgU2lkZWJhckxlZnRNb2R1bGUsIFNpZGViYXJSaWdodE1vZHVsZSwgV3JhcHBlck1vZHVsZV0sXG4gIHByb3ZpZGVyczogW1JvdXRpbmdTZXJ2aWNlLCBXcmFwcGVyU2VydmljZSwgU2lkZWJhclJpZ2h0U2VydmljZSwgSGVhZGVyU2VydmljZSwgRm9vdGVyU2VydmljZV1cbn0pXG5leHBvcnQgY2xhc3MgTGF5b3V0TW9kdWxlIHtcblxuICAvKipcbiAgICogQG1ldGhvZCBjb25zdHJ1Y3RvclxuICAgKiBAcGFyYW0gcGFyZW50TW9kdWxlIFtkZXNjcmlwdGlvbl1cbiAgICovXG4gIGNvbnN0cnVjdG9yKEBPcHRpb25hbCgpIEBTa2lwU2VsZigpIHBhcmVudE1vZHVsZTogTGF5b3V0TW9kdWxlKSB7XG4gICAgaWYgKHBhcmVudE1vZHVsZSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdMYXlvdXRNb2R1bGUgaXMgYWxyZWFkeSBsb2FkZWQuIEltcG9ydCBpdCBpbiB0aGUgQXBwTW9kdWxlIG9ubHkhJyk7XG4gICAgfVxuICB9XG5cbiAgLyoqXG4gICAqIFtmb3JSb290IGRlc2NyaXB0aW9uXVxuICAgKiBAbWV0aG9kIGZvclJvb3RcbiAgICogQHBhcmFtICBsYXlvdXRDb25maWcgW2Rlc2NyaXB0aW9uXVxuICAgKiBAcmV0dXJuIFtkZXNjcmlwdGlvbl1cbiAgICovXG4gIHN0YXRpYyBmb3JSb290KGxheW91dENvbmZpZzogTGF5b3V0U3RhdGUpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPExheW91dE1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTGF5b3V0TW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbLi4ubGF5b3V0UHJvdmlkZXIobGF5b3V0Q29uZmlnKSwgTGF5b3V0U2VydmljZV1cbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCAqIGZyb20gJy4vbGF5b3V0LnNlcnZpY2UnO1xuZXhwb3J0ICogZnJvbSAnLi9sYXlvdXQuc3RvcmUnO1xuZXhwb3J0ICogZnJvbSAnLi9sYXlvdXQuc3RhdGUnO1xuIl19