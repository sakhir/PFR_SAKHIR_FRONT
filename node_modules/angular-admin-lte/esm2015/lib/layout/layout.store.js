import { BehaviorSubject } from 'rxjs';
import { distinctUntilChanged, pluck } from 'rxjs/operators';
/*
 *
 */
export class LayoutStore {
    /**
     * @method constructor
     * @param layoutConfig [description]
     */
    constructor(layoutConfig) {
        this.initialLayoutState = {
            isSidebarLeftCollapsed: false,
            isSidebarLeftExpandOnOver: false,
            isSidebarLeftMouseOver: false,
            isSidebarLeftMini: true,
            sidebarRightSkin: 'dark',
            isSidebarRightCollapsed: true,
            isSidebarRightOverContent: true,
            layout: 'normal',
            sidebarLeftMenu: [],
            sidebarLeftMenuActiveUrl: '',
            skin: 'blue'
        };
        if (layoutConfig) {
            this.initialLayoutState = Object.assign(this.initialLayoutState, layoutConfig);
        }
        this.state = new BehaviorSubject(this.initialLayoutState);
        this.layoutState = this.state.asObservable();
    }
    /**
     * [windowInnerHeight description]
     * @method windowInnerHeight
     * @return [description]
     */
    get windowInnerHeight() {
        return this.layoutState.pipe(pluck('windowInnerHeight'), distinctUntilChanged());
    }
    /**
     * [windowInnerWidth description]
     * @method windowInnerWidth
     * @return [description]
     */
    get windowInnerWidth() {
        return this.layoutState.pipe(pluck('windowInnerWidth'), distinctUntilChanged());
    }
    /**
     * [isSidebarLeftCollapsed description]
     * @return [description]
     */
    get isSidebarLeftCollapsed() {
        return this.layoutState.pipe(pluck('isSidebarLeftCollapsed'), distinctUntilChanged());
    }
    /**
     * [isSidebarLeftExpandOnOver description]
     * @method isSidebarLeftExpandOnOver
     * @return [description]
     */
    get isSidebarLeftExpandOnOver() {
        return this.layoutState.pipe(pluck('isSidebarLeftExpandOnOver'), distinctUntilChanged());
    }
    /**
     * [isSidebarLeftMouseOver description]
     * @method isSidebarLeftMouseOver
     * @return [description]
     */
    get isSidebarLeftMouseOver() {
        return this.layoutState.pipe(pluck('isSidebarLeftMouseOver'), distinctUntilChanged());
    }
    /**
     * [isSidebarLeftMini description]
     * @method isSidebarLeftMini
     * @return [description]
     */
    get isSidebarLeftMini() {
        return this.layoutState.pipe(pluck('isSidebarLeftMini'), distinctUntilChanged());
    }
    /**
     * [sidebarRightSkin description]
     * @method sidebarRightSkin
     * @return [description]
     */
    get sidebarRightSkin() {
        return this.layoutState.pipe(pluck('sidebarRightSkin'), distinctUntilChanged());
    }
    /**
     * [isSidebarRightCollapsed description]
     * @return [description]
     */
    get isSidebarRightCollapsed() {
        return this.layoutState.pipe(pluck('isSidebarRightCollapsed'), distinctUntilChanged());
    }
    /**
     * [isSidebarRightOverContent description]
     * @method isSidebarRightOverContent
     * @return [description]
     */
    get isSidebarRightOverContent() {
        return this.layoutState.pipe(pluck('isSidebarRightOverContent'), distinctUntilChanged());
    }
    /**
     * [sidebarLeftMenu description]
     * @method sidebarLeftMenu
     * @return [description]
     */
    get sidebarLeftMenu() {
        return this.layoutState.pipe(pluck('sidebarLeftMenu'), distinctUntilChanged());
    }
    /**
     * [sidebarLeftMenuActiveUrl description]
     * @method sidebarLeftMenuActiveUrl
     * @return [description]
     */
    get sidebarLeftMenuActiveUrl() {
        return this.layoutState.pipe(pluck('sidebarLeftMenuActiveUrl'), distinctUntilChanged());
    }
    /**
     * [sidebarLeftElementHeight description]
     * @method sidebarLeftElementHeight
     * @return [description]
     */
    get sidebarLeftElementHeight() {
        return this.layoutState.pipe(pluck('sidebarLeftElementHeight'), distinctUntilChanged());
    }
    /**
     * [layoutType description]
     * @method layoutType
     * @return [description]
     */
    get layout() {
        return this.layoutState.pipe(pluck('layout'), distinctUntilChanged());
    }
    /**
     * [skin description]
     * @method skin
     * @return [description]
     */
    get skin() {
        return this.layoutState.pipe(pluck('skin'), distinctUntilChanged());
    }
    /**
     * [wrapperClasses description]
     * @method wrapperClasses
     * @return [description]
     */
    get wrapperClasses() {
        return this.layoutState.pipe(pluck('wrapperClasses'), distinctUntilChanged());
    }
    /**
     * [sidebarLeftCollapsed description]
     * @method sidebarLeftCollapsed
     * @param value [description]
     */
    sidebarLeftCollapsed(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftCollapsed: value }));
    }
    /**
     * [sidebarLeftExpandOnOver description]
     * @method sidebarLeftExpandOnOver
     * @param value [description]
     */
    sidebarLeftExpandOnOver(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftExpandOnOver: value }));
    }
    /**
     * [setSidebarLeftElementHeight description]
     * @method setSidebarLeftElementHeight
     * @param value [description]
     */
    setSidebarLeftElementHeight(value) {
        this.state.next(Object.assign(this.state.value, { sidebarLeftElementHeight: value }));
    }
    /**
     * [setSidebarRightSkin description]
     * @method setSidebarRightSkin
     * @param value [description]
     */
    setSidebarRightSkin(value) {
        this.state.next(Object.assign(this.state.value, { sidebarRightSkin: value }));
    }
    /**
     * [sidebarLeftMouseOver description]
     * @method sidebarLeftMouseOver
     * @param value [description]
     */
    sidebarLeftMouseOver(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftMouseOver: value }));
    }
    /**
     * [sidebarLeftMini description]
     * @method sidebarLeftMini
     * @param value [description]
     */
    sidebarLeftMini(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarLeftMini: value }));
    }
    /**
     * [sidebarRightCollapsed description]
     * @method sidebarRightCollapsed
     * @param value [description]
     */
    sidebarRightCollapsed(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarRightCollapsed: value }));
    }
    /**
     * [sidebarRightOverContent description]
     * @method sidebarRightOverContent
     * @param value [description]
     */
    sidebarRightOverContent(value) {
        this.state.next(Object.assign(this.state.value, { isSidebarRightOverContent: value }));
    }
    /**
     * [setSidebarLeftMenu description]
     * @method setSidebarLeftMenu
     * @param value [description]
     */
    setSidebarLeftMenu(value) {
        this.state.next(Object.assign(this.state.value, { sidebarLeftMenu: value }));
    }
    /**
     * [setSidebarLeftMenuActiveUrl description]
     * @method setSidebarLeftMenuActiveUrl
     * @param value [description]
     */
    setSidebarLeftMenuActiveUrl(value) {
        this.state.next(Object.assign(this.state.value, { sidebarLeftMenuActiveUrl: value }));
    }
    /**
     * [setLayout description]
     * @method setLayout
     * @param value [description]
     */
    setLayout(value) {
        this.state.next(Object.assign(this.state.value, { layout: value }));
    }
    /**
     * [setSkin description]
     * @method setSkin
     * @param value [description]
     */
    setSkin(value) {
        this.state.next(Object.assign(this.state.value, { skin: value }));
    }
    /**
     * [setWrapperClasses description]
     * @method setWrapperClasses
     * @param value [description]
     */
    setWrapperClasses(value) {
        this.state.next(Object.assign(this.state.value, { wrapperClasses: value }));
    }
    /**
     * [setWindowInnerHeight description]
     * @method setWindowInnerHeight
     * @param value [description]
     */
    setWindowInnerHeight(value) {
        this.state.next(Object.assign(this.state.value, { windowInnerHeight: value }));
    }
    /**
     * [setWindowInnerWidth description]
     * @method setWindowInnerWidth
     * @param value [description]
     */
    setWindowInnerWidth(value) {
        this.state.next(Object.assign(this.state.value, { windowInnerWidth: value }));
    }
}
//# sourceMappingURL=data:application/json;base64,